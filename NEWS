Overview of changes between 1.0.0 and 1.0.2
===========================================

* Fix an import error of the PyCairo C API [Bastian]
* Use the GClosure variants for the Alpha API [Emmanuele]
* Update the examples [Bastian, Emmanuele]
* Allow iterating over the actors references by clutter.Behaviour instances
  using the Python iteration syntax [Emmanuele]
* Override __str__ and __repr__ slots for clutter.Path [Emmanuele]
* Add back clutter.Actor.get_allocation_geometry() which was erroneously
  removed from the bindings [Emmanuele]
* Update the build so that PyClutter works with Clutter 1.2 [Bastian]
* Add support for the X11 and GLX specific API, under the clutter.x11 and
  clutter.glx sub-modules, respectively [Bastian]
* Add more (optional) parameters to the clutter.Animation constructor [Bastian]
* Add __str__ and __repr__ slots for many boxed types [Bastian]
* Add richcompare slot for clutter.Color, clutter.Path and
  clutter.ActorBox [Bastian]
* Allow iterating over a clutter.Path [Bastian]
* Allow implementing a clutter.ChildMeta in pure Python [Bastian]
* Bind clutter.Units [Bastian]
* Allow implementing clutter.Scriptable in pure Python [Bastian]
* Use a custom codegen script to fix bug #1827 and allow overriding the
  Python name of a C method [Bastian]
* Add docstrings for all methods [Bastian]

Overview of changes between 0.9.2 and 1.0.0
===========================================

* Dropped the in-tree bindings of clutter-gtk and clutter-gst: you will
  have to install pyclutter-gtk and pyclutter-gst respectively to be able
  to import cluttergtk and cluttergst.
* Fixed memory leaks in clutter.Actor.animate [Chideok Hwang]
* Allow accessing child properties for clutter.Container
* Allow iterating over the children of a clutter.Container using the
  native Python iterator support
* Allow creating custom ChildMeta classes from Python
* Mark the classes removed from upstream Clutter as "deprecated"; trying
  to instantiate one of the deprecated classes will result in the equivalent
  class in Clutter 1.0 to be created and a warning printed out on the console
* Override the __repr__ and __str__ methods for clutter.Color: the former
  will print out a string that can be used through eval() to create a copy
  of the color; the latter will print out the hexadecimal representation of
  the color.
* Override the __str__ method of clutter.Event: it will now print more
  information on the event (type, time, source actor) and per-event type
  fields (button, key, related actor, etc.).
* Deprecated clutter.stage_get_default() in favour of an optional argument
  to clutter.Stage(); calling:

        clutter.Stage(default=True)

  will return the default Stage singleton; the default argument is optional
  and it defaults to False.
* Allow passing the following values to methods accepting a clutter.Color:

        - a clutter.Color (e.g.: clutter.Color(255, 0, 0, 255))
        - a 4-tuple of RGBA values (e.g.: (255, 0, 0, 255))
        - a hexadecimal representation of the color (e.g.: '#ff0000ff')

Overview of changes between 0.8.2 and 0.9.2
===========================================

* Require clutter core >= 1.0.0
* Provide better bindings for the Cogl API
* Add more examples ported from the clutter core interactive tests

Overview of changes between 0.8.0 and 0.8.2
===========================================

* Require clutter core >= 0.8.4.
* PyClutter exposes most of the Clutter core API.
* Use floating point values for the units-based API; this breaks
  applications written with PyClutter 0.8.0 and using the units
  variants of the clutter.Actor API.
* PyClutter now exposes most of the COGL base API, including the generic
  Handle type, used for GL objects handles.
* PyClutter now exposes the whole texture COGL API as part of the Handle
  class methods.
* Bug 1327 - [PATCH] pyclutter ClutterListModel with multiple
  columns [Bastian Winkler]
* Bug 1326 - [PATCH] pyclutter ClutterTimeline list_markers
  returns <nil> [Bastian Winkler]
* Bug 1296 - Adding unicode_value attribute to ClutterKeyEvent
  [Julien Pauty]
* Bug 1288 - clutter_container_raise_child's second argument should
  be optional [Thomas Steinacher]
* Bug 1287 - clutter_event_get_device_id not available in pyclutter
  [Thomas Steinacher]
* Bug 1337 - [PATCH] pyclutter ClutterVertex initialization
  [Bastian Winkler]
* Bug 1258 - Improvement to pyclutter documentation [Gordon Allott]
* Bug 1341 - [PATCH] Override reading of attributes [Bastian Winkler]

Overview of changes between 0.6.2 and 0.8.0
===========================================

* Require clutter core >= 0.8.2
* Require clutter suite >= 0.8
* Split up the clutter submodules into their own modules, to
  allow proper initialization for cluttergtk and cluttergst
* Initial support for the COGL path API
* Removed the tidy submodule
* Documentation has been regenerated but it's still incomplete
  and unfinished

Overview of changes between 0.6.0 and 0.6.2
===========================================

* Require clutter-core >= 0.6.2
* Require Python >= 2.4.0
* Fix bug #841 - override the dlopen() flags to allow loading
  symbols from the underlying C libraries [Blake Ramsdell]
* Add more documentation
* Fix the BehaviourEllipse constructor to follow the same
  pattern of the other behaviours
* Fix the clutter.tidy optional module

Overview of changes between 0.5.2 and 0.6.0
===========================================

* Require clutter-core >= 0.6.0
* Require 0.6 releases of the whole clutter suite
* Add optional Tidy bindings (not enabled by default)
* Resync with upstream changes
* Add deprecation warnings
* Fix bug #797 - Memory leak with pyclutter [Tero Saarni]

Overview of changes between 0.5.1 and 0.5.2
===========================================

* Require clutter-core >= 0.5.6
* Resync with upstream changes
* Add initial API reference [bug #758, Daniel Schierbeck]
* Deprecated clutter.rectangle_new_with_color(): pass the "color" (optional)
  parameter to clutter.Rectangle() instead
* Deprecated clutter.stage_get_default(): call clutter.Stage() instead
* Let pyclutter pick up clutter.Script.connect_signals()
* The parameters of clutter.Score.append() have been inverted with regards
  to the C API; the new signature is: clutter.Score.append(timeline, parent).
  Named parameters will still work.
* Fix bug #748 - typo in clutter.Event.modifier_state

Overview of changes between 0.5.0 and 0.5.1
===========================================

* Require autotools >= 1.9
* Require clutter-core >= 0.5.4 and clutter-gtk >= 0.5.2
* Resync with upstream changes
* Support the conversion to and from ClutterUnits
* Allow the duration property of clutter.Timeline as a constructor parameter,
  and remove clutter.timeline_new_for_duration()

Overview of changes between 0.4.2 and 0.5.0
===========================================

* Resync with upstream
  o Removed the clutter.Layout, clutter.Box, clutter.HBox and clutter.VBox
    classes, as upstream removed them as well
  o The clutter.Margin and clutter.Padding classes have been removed as
    well
  o Add clutter.Score, clutter.Shader, clutter.Model and clutter.Script
  o Various API changes
* Change the clutter.Actor.do_query_coords() method signature: an ActorBox
  is also passed to the method, containing the current bounding box
  coordinates
* The alpha parameter in the clutter.Behaviour classes has been moved at
  the end of the arguments list, to reflect its being optional; named
  arguments still work and are the safest way to call constructors
* The clutter.Texture constructor accepts an optional pixbuf argument;
  this removes the need of clutter.texture_from_pixbuf() function
* clutter.ActorBox has two new fields: .size and .origin returning tuples
* Fixed bugs:
  o #622 - Segmentation fault when calling Entry.handle_key_event()

Overview of changes between 0.3.0 and 0.4.0
===========================================

* Resync with upstream
* Allow creating clutter.Layout, clutter.Container and subclassing
  every generic class in pure Python
* Contain bindings for clutter-gst, clutter-gtk and clutter-cairo

Overview of changes between 0.1.0 and 0.2.0
===========================================

* Resync with upstream
  o add clutter.Behaviour API
  o allow implementing a clutter.Behaviour in pure python
  o add clutter.Alpha API
  o allow implementing the clutter.Media interface in pure python
* Clean up the build environment
  o split overridden functions per object/function
  o add clutter.gtk and clutter.gst sub-modules
  o add some public API for bindings of clutter-based libraries
