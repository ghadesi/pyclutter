2006-11-19  Emmanuele Bassi  <ebassi@openedhand.com>

	* clutter/clutter-behaviour.override: Implement the
	clutter.Knot boxed type as a tuple of two integers.

2006-11-19  Emmanuele Bassi  <ebassi@openedhand.com>

	The coverage of global functions is 100.00% (18/18)
	The coverage of methods is 100.00% (145/145)

	* clutter/clutter-behaviour.override: Implement the
	final missing method: clutter.BehaviourPath.append_knots().

2006-11-19  Emmanuele Bassi  <ebassi@openedhand.com>

	The coverage of global functions is 100.00% (18/18)
	The coverage of methods is 99.31% (144/145)

	* clutter/clutter.override: Implement the
	clutter.Group.get_children() method.

	* clutter/clutter-behaviour.override: Remove the empty
	clutter.BehaviourPath.append_knots() stub; implement the
	clutter.BehaviourPath.get_knots() method.

2006-11-19  Emmanuele Bassi  <ebassi@openedhand.com>

	The coverage of global functions is 100.00% (18/18)
	The coverage of methods is 98.62% (143/145)

	* clutter/pyclutter.h:
	* clutter/clutterpython.c: Add and optional "caller" argument
	to pyclutter_callback_invoke(): use this argument to change
	the caller (i.e. the first argument) of the callback from the
	default (the instance of the class).

	* clutter/clutter.override: Implement clutter.Group.foreach().

	* clutter/clutter-behaviour.override: Implement the
	clutter.Behaviour.actors_foreach() method.

	* examples/rects.py: Check if the clutter.Group.foreach()
	method works.

2006-11-18  Emmanuele Bassi  <ebassi@openedhand.com>

	* configure.ac: Bump to 0.1.2.

2006-11-18  Emmanuele Bassi  <ebassi@openedhand.com>

	The coverage of global functions is 100.00% (18/18)
	The coverage of methods is 97.24% (141/145)

	* clutter/Makefile.am: Move back clutter inside a non-versioned
	module; we don't need the stuff pygtk uses to load the right
	version.

	* clutter/pyclutter.pc.in: Add Cflags section and the include
	directory variable.

	* clutter/pyclutter.h:
	* clutter/clutterpython.c: Utility header for easier bindings;
	added PyClutterCallback, a wrapper for invoking callbacks; this
	should really go into pygtk, though - luckily for us, the Perl
	bindings are more friendly.

	* clutter/cluttermodule.c: Update with the correct prefix.

	* clutter/clutter.override:
	* clutter/clutter-behaviour.override: Implement the
	missing clutter.Alpha.set_func() method using the newly
	added PyClutterCallback.

	* examples/rects.py: Print the version tuple.

2006-11-18  Emmanuele Bassi  <ebassi@openedhand.com>

	The coverage of global functions is 100.00% (18/18)
	The coverage of methods is 96.55% (140/145)

	* clutter/clutter-behaviour.override: Add override for
	behaviours and alpha objects; add the convenience alpha
	functions to the ignore-list.

	* clutter/Makefile.am:
	* clutter/clutter.override: Update.

2006-11-18  Emmanuele Bassi  <ebassi@openedhand.com>

	The coverage of global functions is 81.82% (18/22)
	The coverage of methods is 95.24% (140/147)

	* clutter/clutter-base-types.defs:
	* clutter/clutter-base.defs: Reinstate the base files

	* clutter/clutter-actor.override:
	* clutter/clutter-boxed.override:
	* clutter/clutter-event.override: Move out the overrides
	to their own files, to keep things clean.

	* clutter/Makefile.am: Update.

	* Makefile.am:
	* createdefs.py: Generates the .defs files.

2006-11-17  Emmanuele Bassi  <ebassi@openedhand.com>

	The coverage of global functions is 76.19% (16/21)
	The coverage of methods is 91.84% (135/147)

	* clutter/clutter.defs: Sync with upstream API changes - hopefully,
	the API should be a bit more stable now.

2006-11-16  Emmanuele Bassi  <ebassi@openedhand.com>

	The coverage of global functions is 100.00% (16/16)
	The coverage of methods is 92.31% (132/143)

	* clutter/clutter.override: Update from upstream API changes.
	
	* clutter/Makefile.am:
	* clutter/clutter-base.defs:
	* clutter/clutter-base-types.defs:
	* clutter/clutter.defs: Consolidate the definitions inside
	a single file; there's no point making stuff more complicated
	than already is.

2006-11-15  Emmanuele Bassi  <ebassi@openedhand.com>

	* clutter/clutter.override:
	* clutter/clutter-base.defs:
	* clutter/clutter-base-types.defs: Update after upstream. Still
	doesn't built, but it's a beginning.

2006-07-08  Emmanuele Bassi  <ebassi@openedhand.com>

	* configure.ac: Require clutter 0.1.1 and update our own version.

2006-07-08  Emmanuele Bassi  <ebassi@openedhand.com>

	* clutter/clutter.override: Add accessors for the clutter.Event
	object (Ross Burton, #104).

	* clutter/clutter-base.defs:
	* clutter/clutter-base-types.defs: Make clutter.event_new the
	constructor for the clutter.Event object, and specify the boxed
	type functions for copy and free.

	* examples/rects.py: Change the example to include the usage of
	the new event accessors.

2006-07-06  Emmanuele Bassi  <ebassi@openedhand.com>

	* clutter/clutter-base.defs:
	* clutter/clutter-base-types.defs: Resync with the API changes
	inside clutter.

2006-06-23  Emmanuele Bassi  <ebassi@openedhand.com>

	* clutter/__init__.py: Relay __version__ from the shared object
	to the main package.

2006-06-23  Emmanuele Bassi  <ebassi@openedhand.com>

	* clutter/cluttermodule.c: Remove the debug messages and fix the
	__version__ tuple generation.

2006-06-23  Emmanuele Bassi  <ebassi@openedhand.com>

	* clutter/Makefile.am: Install a _clutter shared object and then add
	a __init__.py loading the right namespace.

2006-06-23  Emmanuele Bassi  <ebassi@openedhand.com>

	* pyclutter/*
	* *: Move python bindings out of tree.

2006-06-23  Ross Burton  <ross@openedhand.com>

	* python/Makefile.am:
	Fix -avoid-version so we don't install clutter.so.0.0.0.

2006-06-22  Emmanuele Bassi  <ebassi@openedhand.com>

	* python/Makefile.am:
	* python/clutter.override:
	* python/clutter-base.defs:
	* python/clutter-base-types.defs: Bind updated clutter.Timeline API;
	bind clutter.Media interface and clutter.VideoTexture.

2006-06-22  Emmanuele Bassi  <ebassi@openedhand.com>

	* python/Makefile.am:
	* python/pyclutter.pc.in: Add a pkgconfig file in order to
	check for bindings existence.

2006-06-22  Emmanuele Bassi  <ebassi@openedhand.com>

	* python/clutter-base-types.defs: Remove ClutterActorTransform.

2006-06-13  Matthew Allum  <mallum@openedhand.com>

	* ChangeLog:
	* python/Makefile.am:
	* python/clutter-base-types.defs:
	* python/clutter-base.defs:
	* python/clutter.override:
	Rename element -> actor. 
	Disable video texture bindings as to build again.

2006-06-06  Matthew Allum  <mallum@openedhand.com>

	* python/clutter-base.defs:
	Add support for set/get_depth. Fix timeline declaration.

2006-06-05  Emmanuele Bassi  <ebassi@openedhand.com>

	* python/clutter-base-types.defs:
	* python/clutter-base.defs:
	* python/clutter.override: Wrap new API and objects.

2006-05-27  Emmanuele Bassi  <ebassi@openedhand.com>

	* python/clutter-base.defs: Make static functions appear like
	package methods, e.g.: clutter_main() is clutter.main() and
	not clutter.clutter_main().  Changed functions are:
	    C name			  Python name
	  - clutter_main		- clutter.main
	  - clutter_stage		- clutter.stage
	  - clutter_want_debug		- clutter.want_debug
	  - clutter_redraw		- clutter.redraw
	  - clutter_threads_enter	- clutter.threads_enter
	  - clutter_threads_leave	- clutter.threads_leave
	
	* python/clutter.override: Ignore all X11 and GL related
	functions, as we don't have type definitions for them; fix typos
	and cut-and-paste errors; make the threads_enter and main static
	function use the pygobject threading facilities.

	* Makefile.am: Rework the build system.  The defs files have been
	split in two: clutter-base-types.def for the type declarations
	and clutter-base.defs for the methods and functions.  The python
	glue code depends on two auto-generated files: clutter.defs and
	clutter-types.defs; these two files includes the clutter-base
	files.  If the API changes, run "make update-defs": it will
	create a "clutter-api.defs" which should be hand-edited and
	the new sections added to the clutter-base files.  This is needed
	because we do some mangling of the namespace and static functions
	names, so we can't rely on the h2defs generator.

2006-05-27  Emmanuele Bassi  <ebassi@openedhand.com>

	API coverage:
	  - global functions: 71.43% (10/14)
	  - methods:          95.40% (83/87)

	* python/clutter.override: Implement bindings for the missing
	ClutterTexture methods:
	  - get_base_size
	  - get_n_tiles
	  - get_x_tile_detail
	  - get_y_tile_detail
	
	* python/clutter.override: Implement the ClutterGroup.add_many
	method.

2006-05-26  Emmanuele Bassi  <ebassi@openedhand.com>

	* python/clutter-base.defs:
	* python/clutter-base-types.defs:
	* python/clutter.override: Fix ClutterGeometry bindings;
	implement ClutterElementBox bindings.

	* python/Makefile.am: Use variables instead of hard-coded
	file names.

