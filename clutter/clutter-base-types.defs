;; -*- scheme -*-
; object definitions ...
(define-object Actor
  (in-module "Clutter")
  (parent "GObject")
  (c-name "ClutterActor")
  (gtype-id "CLUTTER_TYPE_ACTOR")
)

(define-object Alpha
  (in-module "Clutter")
  (parent "GInitiallyUnowned")
  (c-name "ClutterAlpha")
  (gtype-id "CLUTTER_TYPE_ALPHA")
)

(define-object Backend
  (in-module "Clutter")
  (parent "GObject")
  (c-name "ClutterBackend")
  (gtype-id "CLUTTER_TYPE_BACKEND")
)

(define-object Behaviour
  (in-module "Clutter")
  (parent "GObject")
  (c-name "ClutterBehaviour")
  (gtype-id "CLUTTER_TYPE_BEHAVIOUR")
)

(define-object BehaviourBspline
  (in-module "Clutter")
  (parent "ClutterBehaviour")
  (c-name "ClutterBehaviourBspline")
  (gtype-id "CLUTTER_TYPE_BEHAVIOUR_BSPLINE")
)

(define-object BehaviourDepth
  (in-module "Clutter")
  (parent "ClutterBehaviour")
  (c-name "ClutterBehaviourDepth")
  (gtype-id "CLUTTER_TYPE_BEHAVIOUR_DEPTH")
)

(define-object BehaviourEllipse
  (in-module "Clutter")
  (parent "ClutterBehaviour")
  (c-name "ClutterBehaviourEllipse")
  (gtype-id "CLUTTER_TYPE_BEHAVIOUR_ELLIPSE")
)

(define-object BehaviourOpacity
  (in-module "Clutter")
  (parent "ClutterBehaviour")
  (c-name "ClutterBehaviourOpacity")
  (gtype-id "CLUTTER_TYPE_BEHAVIOUR_OPACITY")
)

(define-object BehaviourPath
  (in-module "Clutter")
  (parent "ClutterBehaviour")
  (c-name "ClutterBehaviourPath")
  (gtype-id "CLUTTER_TYPE_BEHAVIOUR_PATH")
)

(define-object BehaviourRotate
  (in-module "Clutter")
  (parent "ClutterBehaviour")
  (c-name "ClutterBehaviourRotate")
  (gtype-id "CLUTTER_TYPE_BEHAVIOUR_ROTATE")
)

(define-object BehaviourScale
  (in-module "Clutter")
  (parent "ClutterBehaviour")
  (c-name "ClutterBehaviourScale")
  (gtype-id "CLUTTER_TYPE_BEHAVIOUR_SCALE")
)

(define-object Box
  (in-module "Clutter")
  (parent "ClutterActor")
  (c-name "ClutterBox")
  (gtype-id "CLUTTER_TYPE_BOX")
)

(define-object CloneTexture
  (in-module "Clutter")
  (parent "ClutterActor")
  (c-name "ClutterCloneTexture")
  (gtype-id "CLUTTER_TYPE_CLONE_TEXTURE")
)

(define-object Container
  (in-module "Clutter")
  (c-name "ClutterContainer")
  (gtype-id "CLUTTER_TYPE_CONTAINER")
)

(define-object EffectTemplate
  (in-module "Clutter")
  (parent "GObject")
  (c-name "ClutterEffectTemplate")
  (gtype-id "CLUTTER_TYPE_EFFECT_TEMPLATE")
)

(define-object Entry
  (in-module "Clutter")
  (parent "ClutterActor")
  (c-name "ClutterEntry")
  (gtype-id "CLUTTER_TYPE_ENTRY")
)

(define-object Group
  (in-module "Clutter")
  (parent "ClutterActor")
  (c-name "ClutterGroup")
  (gtype-id "CLUTTER_TYPE_GROUP")
)

(define-object HBox
  (in-module "Clutter")
  (parent "ClutterBox")
  (c-name "ClutterHBox")
  (gtype-id "CLUTTER_TYPE_HBOX")
)

(define-object Label
  (in-module "Clutter")
  (parent "ClutterActor")
  (c-name "ClutterLabel")
  (gtype-id "CLUTTER_TYPE_LABEL")
)

(define-object Layout
  (in-module "Clutter")
  (c-name "ClutterLayout")
  (gtype-id "CLUTTER_TYPE_LAYOUT")
)

(define-object Rectangle
  (in-module "Clutter")
  (parent "ClutterActor")
  (c-name "ClutterRectangle")
  (gtype-id "CLUTTER_TYPE_RECTANGLE")
)

(define-object Stage
  (in-module "Clutter")
  (parent "ClutterGroup")
  (c-name "ClutterStage")
  (gtype-id "CLUTTER_TYPE_STAGE")
)

(define-object Texture
  (in-module "Clutter")
  (parent "ClutterActor")
  (c-name "ClutterTexture")
  (gtype-id "CLUTTER_TYPE_TEXTURE")
)

(define-object Timeline
  (in-module "Clutter")
  (parent "GObject")
  (c-name "ClutterTimeline")
  (gtype-id "CLUTTER_TYPE_TIMELINE")
)

(define-object VBox
  (in-module "Clutter")
  (parent "ClutterBox")
  (c-name "ClutterVBox")
  (gtype-id "CLUTTER_TYPE_VBOX")
)

;; Enumerations and flags ...

(define-enum Gravity
  (in-module "Clutter")
  (c-name "ClutterGravity")
  (gtype-id "CLUTTER_TYPE_GRAVITY")
  (values
    '("none" "CLUTTER_GRAVITY_NONE")
    '("north" "CLUTTER_GRAVITY_NORTH")
    '("north-east" "CLUTTER_GRAVITY_NORTH_EAST")
    '("east" "CLUTTER_GRAVITY_EAST")
    '("south-east" "CLUTTER_GRAVITY_SOUTH_EAST")
    '("south" "CLUTTER_GRAVITY_SOUTH")
    '("south-west" "CLUTTER_GRAVITY_SOUTH_WEST")
    '("west" "CLUTTER_GRAVITY_WEST")
    '("north-west" "CLUTTER_GRAVITY_NORTH_WEST")
    '("center" "CLUTTER_GRAVITY_CENTER")
  )
)

(define-flags ActorFlags
  (in-module "Clutter")
  (c-name "ClutterActorFlags")
  (gtype-id "CLUTTER_TYPE_ACTOR_FLAGS")
  (values
    '("mapped" "CLUTTER_ACTOR_MAPPED")
    '("realized" "CLUTTER_ACTOR_REALIZED")
  )
)

(define-enum RotateAxis
  (in-module "Clutter")
  (c-name "ClutterRotateAxis")
  (gtype-id "CLUTTER_TYPE_ROTATE_AXIS")
  (values
    '("x-axis" "CLUTTER_X_AXIS")
    '("y-axis" "CLUTTER_Y_AXIS")
    '("z-axis" "CLUTTER_Z_AXIS")
  )
)

(define-enum RotateDirection
  (in-module "Clutter")
  (c-name "ClutterRotateDirection")
  (gtype-id "CLUTTER_TYPE_ROTATE_DIRECTION")
  (values
    '("w" "CLUTTER_ROTATE_CW")
    '("cw" "CLUTTER_ROTATE_CCW")
  )
)

(define-enum PackType
  (in-module "Clutter")
  (c-name "ClutterPackType")
  (gtype-id "CLUTTER_TYPE_PACK_TYPE")
  (values
    '("start" "CLUTTER_PACK_START")
    '("end" "CLUTTER_PACK_END")
  )
)

(define-flags ModifierType
  (in-module "Clutter")
  (c-name "ClutterModifierType")
  (gtype-id "CLUTTER_TYPE_MODIFIER_TYPE")
  (values
    '("shift-mask" "CLUTTER_SHIFT_MASK")
    '("lock-mask" "CLUTTER_LOCK_MASK")
    '("control-mask" "CLUTTER_CONTROL_MASK")
    '("mod1-mask" "CLUTTER_MOD1_MASK")
    '("mod2-mask" "CLUTTER_MOD2_MASK")
    '("mod3-mask" "CLUTTER_MOD3_MASK")
    '("mod4-mask" "CLUTTER_MOD4_MASK")
    '("mod5-mask" "CLUTTER_MOD5_MASK")
    '("button1-mask" "CLUTTER_BUTTON1_MASK")
    '("button2-mask" "CLUTTER_BUTTON2_MASK")
    '("button3-mask" "CLUTTER_BUTTON3_MASK")
    '("button4-mask" "CLUTTER_BUTTON4_MASK")
    '("button5-mask" "CLUTTER_BUTTON5_MASK")
  )
)

(define-enum EventType
  (in-module "Clutter")
  (c-name "ClutterEventType")
  (gtype-id "CLUTTER_TYPE_EVENT_TYPE")
  (values
    '("nothing" "CLUTTER_NOTHING")
    '("key-press" "CLUTTER_KEY_PRESS")
    '("key-release" "CLUTTER_KEY_RELEASE")
    '("motion" "CLUTTER_MOTION")
    '("button-press" "CLUTTER_BUTTON_PRESS")
    '("2button-press" "CLUTTER_2BUTTON_PRESS")
    '("3button-press" "CLUTTER_3BUTTON_PRESS")
    '("button-release" "CLUTTER_BUTTON_RELEASE")
    '("scroll" "CLUTTER_SCROLL")
    '("stage-state" "CLUTTER_STAGE_STATE")
    '("destroy-notify" "CLUTTER_DESTROY_NOTIFY")
    '("client-message" "CLUTTER_CLIENT_MESSAGE")
    '("delete" "CLUTTER_DELETE")
  )
)

(define-enum ScrollDirection
  (in-module "Clutter")
  (c-name "ClutterScrollDirection")
  (gtype-id "CLUTTER_TYPE_SCROLL_DIRECTION")
  (values
    '("up" "CLUTTER_SCROLL_UP")
    '("down" "CLUTTER_SCROLL_DOWN")
    '("left" "CLUTTER_SCROLL_LEFT")
    '("right" "CLUTTER_SCROLL_RIGHT")
  )
)

(define-enum StageState
  (in-module "Clutter")
  (c-name "ClutterStageState")
  (gtype-id "CLUTTER_TYPE_STAGE_STATE")
  (values
    '("fullscreen" "CLUTTER_STAGE_STATE_FULLSCREEN")
    '("maximized" "CLUTTER_STAGE_STATE_MAXIMIZED")
    '("minimized" "CLUTTER_STAGE_STATE_MINIMIZED")
    '("offscreen" "CLUTTER_STAGE_STATE_OFFSCREEN")
  )
)

(define-flags FeatureFlags
  (in-module "Clutter")
  (c-name "ClutterFeatureFlags")
  (gtype-id "CLUTTER_TYPE_FEATURE_FLAGS")
  (values
    '("texture-rectangle" "CLUTTER_FEATURE_TEXTURE_RECTANGLE")
    '("sync-to-vblank" "CLUTTER_FEATURE_SYNC_TO_VBLANK")
    '("texture-yuv" "CLUTTER_FEATURE_TEXTURE_YUV")
    '("texture-read-pixels" "CLUTTER_FEATURE_TEXTURE_READ_PIXELS")
  )
)

(define-flags LayoutFlags
  (in-module "Clutter")
  (c-name "ClutterLayoutFlags")
  (gtype-id "CLUTTER_TYPE_LAYOUT_FLAGS")
  (values
    '("none" "CLUTTER_LAYOUT_NONE")
    '("width-for-height" "CLUTTER_LAYOUT_WIDTH_FOR_HEIGHT")
    '("height-for-width" "CLUTTER_LAYOUT_HEIGHT_FOR_WIDTH")
    '("natural" "CLUTTER_LAYOUT_NATURAL")
    '("tunable" "CLUTTER_LAYOUT_TUNABLE")
  )
)

(define-enum InitError
  (in-module "Clutter")
  (c-name "ClutterInitError")
  (gtype-id "CLUTTER_TYPE_INIT_ERROR")
  (values
    '("success" "CLUTTER_INIT_SUCCESS")
    '("error-unkown" "CLUTTER_INIT_ERROR_UNKOWN")
    '("error-threads" "CLUTTER_INIT_ERROR_THREADS")
    '("error-backend" "CLUTTER_INIT_ERROR_BACKEND")
    '("error-internal" "CLUTTER_INIT_ERROR_INTERNAL")
  )
)

(define-enum TextureError
  (in-module "Clutter")
  (c-name "ClutterTextureError")
  (gtype-id "CLUTTER_TYPE_TEXTURE_ERROR")
  (values
    '("out-of-memory" "CLUTTER_TEXTURE_ERROR_OUT_OF_MEMORY")
    '("no-yuv" "CLUTTER_TEXTURE_ERROR_NO_YUV")
  )
)

