%%
ignore
  clutter_actor_rotate_xx
  clutter_actor_rotate_yx
  clutter_actor_rotate_zx
  clutter_actor_get_rxangx
  clutter_actor_get_ryangx
  clutter_actor_get_rzangx
  clutter_actor_set_scalex
  clutter_actor_get_scalex
  clutter_actor_set_scale_with_gravityx
%%
override clutter_actor_get_coords
static PyObject *
_wrap_clutter_actor_get_coords (PyGObject *self)
{
	gint x1, y1;
	gint x2, y2;

	clutter_actor_get_coords (CLUTTER_ACTOR (self->obj),
				  &x1, &y1,
				  &x2, &y2);
	return Py_BuildValue("(iiii)", x1, y1, x2, y2);
}
%%
override clutter_actor_get_abs_position
static PyObject *
_wrap_clutter_actor_get_abs_position (PyGObject *self)
{
	gint pos_x, pos_y;

	clutter_actor_get_abs_position (CLUTTER_ACTOR (self->obj),
					&pos_x,
					&pos_y);
	return Py_BuildValue("(ii)", pos_x, pos_y);
}
%%
override clutter_actor_get_abs_size
static PyObject *
_wrap_clutter_actor_get_abs_size (PyGObject *self)
{
        guint width, height;

        clutter_actor_get_abs_size (CLUTTER_ACTOR (self->obj),
                                    &width,
                                    &height);
        return Py_BuildValue ("(ii)", width, height);
}
%%
override clutter_actor_get_size
static PyObject *
_wrap_clutter_actor_get_size (PyGObject *self)
{
        guint width, height;

        clutter_actor_get_size (CLUTTER_ACTOR (self->obj),
                                &width,
                                &height);
        return Py_BuildValue ("(ii)", width, height);
}
%%
override clutter_actor_get_scale
static PyObject *
_wrap_clutter_actor_get_scale (PyGObject *self)
{
        gdouble scale_x, scale_y;

        clutter_actor_get_scale (CLUTTER_ACTOR (self->obj),
                                 &scale_x,
                                 &scale_y);
        return Py_BuildValue ("(ff)", scale_x, scale_y);
}
%%
override clutter_actor_get_vertices
static PyObject *
_wrap_clutter_actor_get_vertices (PyGObject *self)
{
        ClutterVertex vertices[4];
        PyObject *pyvertices;
        int i;

        clutter_actor_get_vertices (CLUTTER_ACTOR (self->obj), vertices);

        pyvertices = PyTuple_New (4);
        for (i = 0; i < 4; i++) {
                PyObject *pyvertex;

                pyvertex = pyg_boxed_new (CLUTTER_TYPE_VERTEX, &vertices[i],
                                          TRUE, TRUE);
                PyTuple_SetItem (pyvertices, i, pyvertex);
        }

        return pyvertices;
}
%%
